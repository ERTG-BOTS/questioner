import logging

from aiogram import Router
from aiogram.filters import Command, CommandObject
from aiogram.types import Message

from infrastructure.database.models import User
from infrastructure.database.repo.requests import RequestsRepo
from tgbot.config import load_config
from tgbot.filters.topic import IsMainTopicMessageWithCommand
from tgbot.services.logger import setup_logging

main_topic_cmds_router = Router()

config = load_config(".env")

setup_logging()
logger = logging.getLogger(__name__)


@main_topic_cmds_router.message(IsMainTopicMessageWithCommand("link"))
async def link_cmd(message: Message):
    group_link = await message.bot.export_chat_invite_link(chat_id=message.chat.id)
    await message.reply(
        f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —ç—Ç–æ—Ç —á–∞—Ç:\n<code>{group_link}</code>"
    )


@main_topic_cmds_router.message(IsMainTopicMessageWithCommand("settings"))
async def settings_cmd(message: Message, questions_repo: RequestsRepo):
    group_settings = await questions_repo.settings.get_settings_by_group_id(
        group_id=message.chat.id,
    )

    await message.reply(
        f"""‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ <b>{message.chat.title}</b>

<b>üß© –§—É–Ω–∫—Ü–∏–∏:</b>
- –ó–∞–ø—Ä–æ—Å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ - {"–î–∞" if group_settings.get_setting("ask_clever_link") else "–ù–µ—Ç"} (/clever)
- –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—é - {"–î–∞" if group_settings.get_setting("activity_status") else "–ù–µ—Ç"} (/activity)

<b>‚è≥ –¢–∞–π–º–µ—Ä—ã:</b>
- –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏–∏ - {group_settings.get_setting("activity_warn_minutes")} –º–∏–Ω—É—Ç (/warn)
- –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—é - {group_settings.get_setting("activity_close_minutes")} –º–∏–Ω—É—Ç (/close)
"""
    )


@main_topic_cmds_router.message(Command("clever"), IsMainTopicMessageWithCommand())
async def ask_clever_link_change(
    message: Message, command: CommandObject, user: User, questions_repo: RequestsRepo
):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–º –∑–∞–ø—Ä–æ—Å–∞ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ –¥–ª—è —Ñ–æ—Ä—É–º–æ–≤."""
    if user.Role not in [2, 10]:
        await message.reply(
            "–î–æ—Å—Ç—É–ø –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –†–ì –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ ü•∫"
        )
        return

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    if not command.args:
        await message.reply("–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /clever [on –∏–ª–∏ off]")
        return

    action = command.args.split(maxsplit=1)[0].lower()
    if action not in ("on", "off"):
        await message.reply("–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /clever [on –∏–ª–∏ off]")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    group_settings = await questions_repo.settings.get_settings_by_group_id(
        group_id=message.chat.id
    )

    current_state = group_settings.get_setting("ask_clever_link")
    target_state = action == "on"
    user_name = user.FIO

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if current_state == target_state:
        status = "–≤–∫–ª—é—á–µ–Ω" if current_state else "–≤—ã–∫–ª—é—á–µ–Ω"
        response = (
            f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
            f"–ó–∞–ø—Ä–æ—Å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞ <b>—É–∂–µ {status}</b>"
        )
    else:
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        await questions_repo.settings.update_setting(
            group_id=message.chat.id, key="ask_clever_link", value=target_state
        )
        action_text = "–≤–∫–ª—é—á–∏–ª" if target_state else "–≤—ã–∫–ª—é—á–∏–ª"
        response = (
            f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{user_name}</b> {action_text} –∑–∞–ø—Ä–æ—Å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞"
        )

    await message.reply(response)


@main_topic_cmds_router.message(Command("activity"), IsMainTopicMessageWithCommand())
async def activity_change(
    message: Message, command: CommandObject, user: User, questions_repo: RequestsRepo
):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–º –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—é."""
    if user.Role not in [2, 10]:
        await message.reply(
            "–î–æ—Å—Ç—É–ø –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –†–ì –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ ü•∫"
        )
        return

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    if not command.args:
        await message.reply("–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /activity [on –∏–ª–∏ off]")
        return

    action = command.args.split(maxsplit=1)[0].lower()
    if action not in ("on", "off"):
        await message.reply("–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /activity [on –∏–ª–∏ off]")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    group_settings = await questions_repo.settings.get_settings_by_group_id(
        group_id=message.chat.id
    )

    current_state = group_settings.get_setting("activity_status")
    target_state = action == "on"
    user_name = user.FIO

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if current_state == target_state:
        status = "–≤–∫–ª—é—á–µ–Ω–æ" if current_state else "–≤—ã–∫–ª—é—á–µ–Ω–æ"
        response = (
            f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
            f"–ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—é <b>—É–∂–µ {status}</b>"
        )
    else:
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        await questions_repo.settings.update_setting(
            group_id=message.chat.id, key="activity_status", value=target_state
        )
        action_text = "–≤–∫–ª—é—á–∏–ª" if target_state else "–≤—ã–∫–ª—é—á–∏–ª"
        response = (
            f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{user_name}</b> {action_text} –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—é"
        )

    await message.reply(response)


@main_topic_cmds_router.message(Command("warn"), IsMainTopicMessageWithCommand())
async def timer_warn_change(
    message: Message, command: CommandObject, user: User, questions_repo: RequestsRepo
):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—é."""
    if user.Role not in [2, 10]:
        await message.reply(
            "–î–æ—Å—Ç—É–ø –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –†–ì –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ ü•∫"
        )
        return

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    if not command.args:
        await message.reply("–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /warn [–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö]")
        return

    new_timer = command.args.split(maxsplit=1)[0]
    if type(int(new_timer)) is not int:
        await message.reply("–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /warn [–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö]")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    group_settings = await questions_repo.settings.get_settings_by_group_id(
        group_id=message.chat.id
    )

    current_state = int(group_settings.get_setting("activity_warn_minutes"))
    close_state = int(group_settings.get_setting("activity_close_minutes"))
    user_name = user.FIO

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if current_state == new_timer:
        response = (
            f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
            f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ <b>—É–∂–µ —á–µ—Ä–µ–∑ {new_timer} –º–∏–Ω—É—Ç</b>"
        )
    else:
        if int(new_timer) < close_state:
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            await questions_repo.settings.update_setting(
                group_id=message.chat.id, key="activity_warn_minutes", value=new_timer
            )
            response = (
                f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{user_name}</b> —É—Å—Ç–∞–Ω–æ–≤–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ {new_timer} –º–∏–Ω—É—Ç"
            )
        else:
            response = (
                f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
                f"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–∫—Ä—ã—Ç–∏—è ({close_state} –º–∏–Ω—É—Ç) "
            )

    await message.reply(response)


@main_topic_cmds_router.message(Command("close"), IsMainTopicMessageWithCommand())
async def timer_close_change(
    message: Message, command: CommandObject, user: User, questions_repo: RequestsRepo
):
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—é."""
    if user.Role not in [2, 10]:
        await message.reply(
            "–î–æ—Å—Ç—É–ø –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –†–ì –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ ü•∫"
        )
        return

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    if not command.args:
        await message.reply("–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /close [–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö]")
        return

    new_timer = command.args.split(maxsplit=1)[0]
    if type(int(new_timer)) is not int:
        await message.reply("–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: /close [–≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö]")
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    group_settings = await questions_repo.settings.get_settings_by_group_id(
        group_id=message.chat.id
    )

    current_state = int(group_settings.get_setting("activity_close_minutes"))
    warn_state = int(group_settings.get_setting("activity_warn_minutes"))
    target_state = new_timer == current_state
    user_name = user.FIO

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if current_state == target_state:
        response = (
            f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
            f"–ó–∞–∫—Ä—ã—Ç–∏–µ <b>—É–∂–µ {new_timer} –º–∏–Ω—É—Ç</b>"
        )
    else:
        if int(new_timer) > warn_state:
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
            await questions_repo.settings.update_setting(
                group_id=message.chat.id, key="activity_close_minutes", value=new_timer
            )
            response = (
                f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{user_name}</b> —É—Å—Ç–∞–Ω–æ–≤–∏–ª —Ç–∞–π–º–µ—Ä –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞ {new_timer} –º–∏–Ω—É—Ç"
            )
        else:
            response = (
                f"<b>‚ú® –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ñ–æ—Ä—É–º–∞</b>\n\n"
                f"–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è ({warn_state} –º–∏–Ω—É—Ç) "
            )

    await message.reply(response)
