from datetime import datetime

import pytz
from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

from tgbot.keyboards.admin.main import AdminMenu


class MonthStatsExtract(CallbackData, prefix="month_stats"):
    menu: str
    month: int
    year: int


class DivisionStatsExtract(CallbackData, prefix="division_stats"):
    menu: str
    month: int
    year: int
    division: str


# –í—ã–±–æ—Ä –¥–∞—Ç –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
def extract_kb() -> InlineKeyboardMarkup:
    current_date = datetime.now(tz=pytz.timezone("Asia/Yekaterinburg"))

    # Get month names in Russian
    month_names = {
        1: "–Ø–Ω–≤–∞—Ä—å",
        2: "–§–µ–≤—Ä–∞–ª—å",
        3: "–ú–∞—Ä—Ç",
        4: "–ê–ø—Ä–µ–ª—å",
        5: "–ú–∞–π",
        6: "–ò—é–Ω—å",
        7: "–ò—é–ª—å",
        8: "–ê–≤–≥—É—Å—Ç",
        9: "–°–µ–Ω—Ç—è–±—Ä—å",
        10: "–û–∫—Ç—è–±—Ä—å",
        11: "–ù–æ—è–±—Ä—å",
        12: "–î–µ–∫–∞–±—Ä—å",
    }

    buttons = []

    # Generate last 6 months in pairs (2 columns)
    for i in range(0, 6, 2):
        row = []

        # First month in the row
        year1 = current_date.year
        month1 = current_date.month - i
        if month1 <= 0:
            month1 += 12
            year1 -= 1

        month1_name = month_names[month1]
        row.append(
            InlineKeyboardButton(
                text=f"üìÖ {month1_name} {year1}",
                callback_data=MonthStatsExtract(
                    menu="month", month=month1, year=year1
                ).pack(),
            )
        )

        # Second month in the row (if exists)
        if i + 1 < 6:
            year2 = current_date.year
            month2 = current_date.month - (i + 1)
            if month2 <= 0:
                month2 += 12
                year2 -= 1

            month2_name = month_names[month2]
            row.append(
                InlineKeyboardButton(
                    text=f"üìÖ {month2_name} {year2}",
                    callback_data=MonthStatsExtract(
                        menu="month", month=month2, year=year2
                    ).pack(),
                )
            )

        buttons.append(row)

    # Add back button
    buttons.append(
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=AdminMenu(menu="reset").pack()
            ),
        ]
    )

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


# –í—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
def division_selection_kb(month: int, year: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

    :param month: –í—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü
    :param year: –í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥
    :return: –û–±—ä–µ–∫—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    """
    buttons = [
        [
            InlineKeyboardButton(
                text="üè¢ –ù–¶–ö",
                callback_data=DivisionStatsExtract(
                    menu="division", month=month, year=year, division="–ù–¶–ö"
                ).pack(),
            ),
            InlineKeyboardButton(
                text="üè≠ –ù–¢–ü",
                callback_data=DivisionStatsExtract(
                    menu="division", month=month, year=year, division="–ù–¢–ü"
                ).pack(),
            ),
        ],
        [
            InlineKeyboardButton(
                text="üìä –í—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
                callback_data=DivisionStatsExtract(
                    menu="division", month=month, year=year, division="–í–°–ï"
                ).pack(),
            ),
        ],
        [
            InlineKeyboardButton(
                text="‚Ü©Ô∏è –ö –≤—ã–±–æ—Ä—É –º–µ—Å—è—Ü–∞",
                callback_data=AdminMenu(menu="stats_extract").pack(),
            ),
        ],
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard
